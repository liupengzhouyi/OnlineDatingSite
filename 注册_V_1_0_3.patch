Index: src/Tools/GetTime/getNowTime.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Tools/GetTime/getNowTime.java	(revision 58d7b7762b1b83e772eebf4397a511f5df08fb5c)
+++ src/Tools/GetTime/getNowTime.java	(revision 58d7b7762b1b83e772eebf4397a511f5df08fb5c)
@@ -0,0 +1,55 @@
+package Tools.GetTime;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+public class getNowTime {
+
+    public String getNowTime() {
+        return nowTime;
+    }
+
+    public void setNowTime(String nowTime) {
+        this.nowTime = nowTime;
+    }
+
+    private String nowTime = null;
+
+    public getNowTime() {
+        Date now = new Date();
+        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        nowTime = dateFormat.format(now);
+    }
+
+    public String getDateTime() {
+        return nowTime;
+    }
+
+    public String getDate() {
+        String time = new String();
+        time = nowTime.substring(0, 10);
+        return time;
+    }
+
+    public String getTime() {
+        String date = new String();
+        date = nowTime.substring(11, nowTime.length());
+        return date;
+    }
+
+    public String getUsedStringForID() {
+        String yourID = "";
+        for (int i = 0; i < nowTime.length(); i++)
+            if (i==0||i==1||i == 2 || i == 3 || i == 5 || i == 6 || i == 8 || i == 9) {
+                yourID = yourID + nowTime.charAt(i);
+            }
+        return yourID;
+    }
+
+    public static void main(String[] args) {
+        System.out.print(new getNowTime().getUsedStringForID());
+        System.out.println(new getNowTime().getDateTime());
+        System.out.println(new getNowTime().getDate());
+        System.out.println(new getNowTime().getTime());
+    }
+}
Index: src/Tools/test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Tools/test.java	(date 1541248000745)
+++ src/Tools/test.java	(revision 58d7b7762b1b83e772eebf4397a511f5df08fb5c)
@@ -1,62 +1,5 @@
 package Tools;
 
-import Tools.GetTime.GetNowTime;
-
 public class test {
-    private String[] provices = {
-            "北京市",
-            "天津市",
-            "上海市",
-            "重庆市",
-            "河北省",
-            "山西省",
-            "辽宁省",
-            "吉林省",
-            "黑龙江省",
-            "江苏省",
-            "浙江省",
-            "安徽省",
-            "福建省",
-            "江西省",
-            "山东省",
-            "河南省",
-            "湖北省",
-            "湖南省",
-            "广东省",
-            "海南省",
-            "四川省",
-            "贵州省",
-            "云南省",
-            "陕西省",
-            "甘肃省",
-            "青海省",
-            "台湾省",
-            "内蒙古自治区",
-            "广西壮族自治区",
-            "西藏自治区",
-            "宁夏回族自治区",
-            "新疆维吾尔自治区",
-            "香港特别行政区",
-            "澳门特别行政区"
-    };
-
-    public void createProvice() {
-        int number = this.provices.length;
-        for (int i=0;i<number;i++) {
-            System.out.println("INSERT INTO privince_table(provices_id, provices_name) VALUES (" + i + ", \'" + this.provices[i] + "\');");
-        }
-    }
-
-    public void createProviceNumbers() {
-        int number = this.provices.length;
-        for (int i=0;i<number;i++) {
-            System.out.println("INSERT INTO privince_number_table(privince_id, today, number) VALUES (" + i + ", \'" + new GetNowTime().getDate() + "\', 0);");
-        }
-    }
-
-    public static void main(String[] args) {
-        //new test().createProvice();
-        new test().createProviceNumbers();
-    }
 
 }
Index: src/Signin/GetSigninInformationServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Signin/GetSigninInformationServlet.java	(date 1541247223197)
+++ src/Signin/GetSigninInformationServlet.java	(revision 58d7b7762b1b83e772eebf4397a511f5df08fb5c)
@@ -18,22 +18,12 @@
         //赋值
         this.setValue(request);
         //判断输入格式
-        boolean keyOfInput = this.verifyInput();
-        if (keyOfInput) {
-            //校验数据
-            this.verifyData(response);
-            //转化数据
-            this.transformationData();
-            //生成用户ID
+
+        //准备数据
 
-            //数据入库
+        //数据入库
 
-            //操作提示
-        } else {
-           //错误提示：数据输入不完整
-
-        }
-
+        //操作提示
     }
 
     protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
@@ -68,6 +58,11 @@
         this.setName(user_name);
         //获取用户性别
         String user_sex = request.getParameter("sex");
+        if (user_sex.equals("0")) {
+            user_sex = "男";
+        } else {
+            user_sex = "女";
+        }
         this.setSex(user_sex);
         //获取用户密码I
         String user_passwordI = request.getParameter("user_passwordI");
@@ -79,7 +74,12 @@
         String user_phone = request.getParameter("user_phone");
         this.setPhone(user_phone);
         //获取用户省份number
-        String user_privince  = request.getParameter("privince");
+        String user_privince = "";
+        String privince_number = request.getParameter("privince");
+
+        //user_privince = new getPrivices().getPrivinceByNumber(privince_number);
+
+
         this.setPrivince(user_privince);
         System.out.println(user_privince);
         //获取用户验证码
@@ -91,114 +91,6 @@
         this.setV_code(verify_code);
     }
 
-    /**
-     * 判断输入数据是否 完整
-     * @return
-     */
-    public boolean verifyInput() {
-        boolean returnKey = false;
-        // 判断电子邮箱
-        boolean keyI = this.isNull(this.getEmail());
-        //判断姓名
-        boolean keyII = this.isNull(this.getName());
-        //判断密码
-        boolean keyIII = this.isNull(this.getPasswordI());
-        //判断重复密码
-        boolean keyIV = this.isNull(this.getPasswordII());
-        // 判断电话号码
-        boolean keyV = this.isNull(this.getPhone());
-        //判断性别
-        boolean keyVI = this.isNull(this.getSex());
-        //判断验证码
-        boolean keyVII = this.isNull(this.getV_code());
-        if (keyI && keyII && keyIII && keyIV && keyV && keyVI && keyVII) {
-            returnKey = true;
-        }
-        return returnKey;
-    }
-
-    /**
-     * 判断是否为空
-     * @param value
-     * @return
-     */
-    public boolean isNull(String value) {
-        boolean returnKey = false;
-        if (value.isEmpty()) {
-            returnKey = true;
-        }
-        if (value.equals("")) {
-            returnKey = true;
-        }
-        if (value == "") {
-            returnKey = true;
-        }
-        return returnKey;
-    }
-
-    //校验数据正确性
-    public void verifyData(HttpServletResponse response) throws IOException {
-        boolean keyII = this.verifyVerifyCode();
-        if (keyII) {
-            //验证码没有问题
-        } else {
-            boolean keyI = this.verifyPassword();
-            if (keyI == false) {
-                //错误页面，密码不一致
-                response.sendRedirect("/");
-            } else{
-                //密码一致
-            }
-        }
-    }
-
-    /**
-     * 校验密码是否一致
-     * @return
-     */
-    public boolean verifyPassword() {
-        boolean returnKey = false;
-        if (this.getPasswordI().equals(this.getPasswordII())) {
-            returnKey = true;
-        }
-        if (this.getPasswordI() == this.getPasswordII()) {
-            returnKey = true;
-        }
-        return returnKey;
-    }
-
-    /**
-     * 校验校验码是否一致
-     * @return
-     */
-    public boolean verifyVerifyCode() {
-        boolean returnKey = false;
-        if (this.getVerify_code().equals(this.getV_code())) {
-            returnKey = true;
-        }
-        if (this.getVerify_code() == this.getV_code()) {
-            returnKey = true;
-        }
-        return returnKey;
-    }
-
-    /**
-     * 转化数据
-      */
-    public void transformationData() {
-        //密码哈希
-        this.setPasswordI(this.getPasswordII().hashCode() + "");
-        //省份转数字
-
-        //性别
-        String user_sex = this.getSex();
-        if (user_sex.equals("0")) {
-            user_sex = "男";
-        } else {
-            user_sex = "女";
-        }
-        this.setSex(user_sex);
-    }
 
     public String getEmail() {
         return email;
@@ -298,6 +190,6 @@
     private String privince = null;
     //用户验证码
     private String verify_code = null;
-    //用户验证码来自于 Session
+    //用户验证码来自于Session
     private String v_code = null;
 }
Index: src/Tools/CreateUserNumber/createID.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Tools/CreateUserNumber/createID.java	(date 1541247709421)
+++ src/Tools/CreateUserNumber/createID.java	(revision 58d7b7762b1b83e772eebf4397a511f5df08fb5c)
@@ -1,7 +1,7 @@
 package Tools.CreateUserNumber;
 
 
-import Tools.GetTime.GetNowTime;
+import Tools.GetTime.getNowTime;
 
 public class createID {
 
@@ -10,7 +10,7 @@
         //省份： 内蒙古自治区
         //第几个： 56
         //获取日期
-        String date = new GetNowTime().getUsedStringForID();
+        String date = new getNowTime().getUsedStringForID();
         ID = date;
 
         //获取省份
Index: src/Tools/GetTime/GetNowTime.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Tools/GetTime/GetNowTime.java	(date 1541247680459)
+++ src/Tools/GetTime/GetNowTime.java	(date 1541247680459)
@@ -1,55 +0,0 @@
-package Tools.GetTime;
-
-import java.text.SimpleDateFormat;
-import java.util.Date;
-
-public class GetNowTime {
-
-    public String GetNowTime() {
-        return nowTime;
-    }
-
-    public void setNowTime(String nowTime) {
-        this.nowTime = nowTime;
-    }
-
-    private String nowTime = null;
-
-    public GetNowTime() {
-        Date now = new Date();
-        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-        nowTime = dateFormat.format(now);
-    }
-
-    public String getDateTime() {
-        return nowTime;
-    }
-
-    public String getDate() {
-        String time = new String();
-        time = nowTime.substring(0, 10);
-        return time;
-    }
-
-    public String getTime() {
-        String date = new String();
-        date = nowTime.substring(11, nowTime.length());
-        return date;
-    }
-
-    public String getUsedStringForID() {
-        String yourID = "";
-        for (int i = 0; i < nowTime.length(); i++)
-            if (i==0||i==1||i == 2 || i == 3 || i == 5 || i == 6 || i == 8 || i == 9) {
-                yourID = yourID + nowTime.charAt(i);
-            }
-        return yourID;
-    }
-
-    public static void main(String[] args) {
-        System.out.print(new GetNowTime().getUsedStringForID());
-        System.out.println(new GetNowTime().getDateTime());
-        System.out.println(new GetNowTime().getDate());
-        System.out.println(new GetNowTime().getTime());
-    }
-}
